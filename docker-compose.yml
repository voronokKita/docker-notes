networks:
    notes_net:
        driver: bridge

services:
    notes_controller:
        container_name: controller
        # WORKDIR /notes/app
        build:
            context: ./controller
            dockerfile: Dockerfile
        stdin_open: true
        tty: true
        volumes:
            - ./controller/app:/notes/app:ro
        ports:
            - "3030:80"
        healthcheck:
            test: curl -sS http://127.0.0.1/ping || echo 1
            interval: 15s
            timeout: 5s
            retries: 3
            start_period: 10s
        depends_on:
            notes_postgres:
                condition: service_healthy
        networks:
            - notes_net

    notes_postgres:
        container_name: postgres
        image: postgres:15.2-alpine3.17
        stdin_open: true
        tty: true
        command:
            - "postgres"
            - "-c"
            - "max_connections=50"
            - "-c"
            - "shared_buffers=1GB"
            - "-c"
            - "effective_cache_size=4GB"
            - "-c"
            - "work_mem=16MB"
            - "-c"
            - "maintenance_work_mem=512MB"
            - "-c"
            - "random_page_cost=1.1"
            - "-c"
            - "temp_file_limit=10GB"
            - "-c"
            - "log_min_duration_statement=200ms"
            - "-c"
            - "idle_in_transaction_session_timeout=10s"
            - "-c"
            - "lock_timeout=1s"
            - "-c"
            - "statement_timeout=60s"
            - "-c"
            - "shared_preload_libraries=pg_stat_statements"
            - "-c"
            - "pg_stat_statements.max=10000"
            - "-c"
            - "pg_stat_statements.track=all"
        environment:
            POSTGRES_USER: "megauser"
            POSTGRES_PASSWORD: "foobarbaz"
            POSTGRES_DB: "notes_project_data"
            PGDATA: "/var/lib/postgresql/data/pgdata"
        volumes:
            - ./postgres/data:/var/lib/postgresql/data
            - ./postgres/init_scripts:/docker-entrypoint-initdb.d:ro
        ports:
            - "5432:5432"
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U megauser -d notes_project_data"]
            interval: 15s
            timeout: 10s
            retries: 3
            start_period: 30s
        # restart: unless-stopped
        networks:
            - notes_net

    notes_pgadmin:
        container_name: pgadmin
        image: dpage/pgadmin4:6.20
        stdin_open: true
        tty: true
        environment:
            PGADMIN_DEFAULT_EMAIL: "admin@example.com"
            PGADMIN_DEFAULT_PASSWORD: "pgadminfoobar"
            PGADMIN_CONFIG_SERVER_MODE: "False"
        volumes:
            - ./pgadmin/data:/var/lib/pgadmin
        ports:
            - "5050:80"
        depends_on:
            notes_postgres:
                condition: service_healthy
        networks:
            - notes_net
